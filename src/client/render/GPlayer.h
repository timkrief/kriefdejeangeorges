// Generated by dia2code
#ifndef RENDER__GPLAYER__H
#define RENDER__GPLAYER__H

#include <memory>
#include <SFML/Graphics.hpp>

namespace render {
  class GFieldObject;
};
namespace sf {
  class Drawable;
};
namespace state {
  class GameState;
}

#include "state/GameState.h"
#include "GFieldObject.h"

namespace render {

  /// class GPlayer - 
  class GPlayer : public sf::Drawable {
    // Associations
    // Attributes
  private:
    std::shared_ptr<state::Player> player;
    // Operations
  public:
    GPlayer (std::shared_ptr<state::Player> player);
    void draw (sf::RenderTarget& target, sf::RenderStates states) const;
    void getSelection (sf::Vector2u selectedTile, int& selectedPlayer, int& selectedFieldObject, GFieldObject& selectedUnit);
    sf::Vector2u getSelectionPosition (int selectedFieldObject);
  };

};

#endif
